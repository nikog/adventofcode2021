// Generated by ReScript, PLEASE EDIT WITH CARE
'use strict';

var Belt_Int = require("rescript/lib/js/belt_Int.js");
var Solution = require("../Solution.bs.js");
var Belt_Array = require("rescript/lib/js/belt_Array.js");
var Caml_array = require("rescript/lib/js/caml_array.js");
var Belt_Option = require("rescript/lib/js/belt_Option.js");

function make(input) {
  var initial = input.split(",").map(function (x) {
        return Belt_Option.getExn(Belt_Int.fromString(x));
      });
  return Belt_Array.makeBy(256, (function (i) {
                  return i;
                })).reduce((function (acc, day) {
                console.log("days gone " + day.toString() + ". fishes: " + acc.length.toString());
                var len = acc.length;
                for(var i = 0; i < len; ++i){
                  var num = acc[i];
                  var next = num - 1 | 0;
                  if (next === -1) {
                    acc[i] = 6;
                    acc.push(8);
                  } else {
                    acc[i] = next;
                  }
                }
                return acc;
              }), initial).length;
}

var Part01 = {
  make: make
};

function howManyFishes(date, num) {
  return (date - num | 0) / 8 | 0;
}

function make$1(input) {
  var initial = input.split(",").map(function (x) {
        return Belt_Option.getExn(Belt_Int.fromString(x));
      });
  var fishesByMaturity = Belt_Array.makeBy(9, (function (i) {
          return initial.filter(function (x) {
                      return x === i;
                    }).length;
        }));
  return Belt_Array.makeBy(256, (function (i) {
                    return i;
                  })).reduce((function (fishesByMaturity, param) {
                  Caml_array.set(fishesByMaturity, 7, Caml_array.get(fishesByMaturity, 7) + Caml_array.get(fishesByMaturity, 0));
                  fishesByMaturity.push(Caml_array.get(fishesByMaturity, 0));
                  fishesByMaturity.shift();
                  return fishesByMaturity;
                }), fishesByMaturity).reduce((function (acc, i) {
                return acc + i;
              }), 0.0);
}

var Part02 = {
  howManyFishes: howManyFishes,
  make: make$1
};

Solution.make(make$1, "day06/input");

exports.Part01 = Part01;
exports.Part02 = Part02;
/*  Not a pure module */
